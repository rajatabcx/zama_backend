// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  name          String?
  email         String         @unique
  password      String?
  passwordToken String?
  shopifyStore  ShopifyStore?
  emailSetting  EmailSettings?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([name])
  @@index([email])
  @@map("users")
}

model EmailSettings {
  id           String   @id @unique @default(uuid())
  stripoApiKey String
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("email_settings")
}

model ShopifyStore {
  id                 String     @id @unique @default(uuid())
  name               String     @unique
  accessToken        String     @unique
  scope              String
  givingDiscount     Boolean    @default(false)
  selectedProductIds Json[]
  discountId         BigInt?
  priceRuleId        BigInt?
  webhookRegistered  Boolean    @default(false)
  hourDelay          Int        @default(10)
  checkouts          Checkout[]
  userId             String     @unique
  user               User       @relation(fields: [userId], references: [id])
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt

  @@index([name])
  @@map("shopify_stores")
}

model Checkout {
  id                     String       @id @unique @default(uuid())
  shopifyCheckoutId      BigInt       @unique
  shopifyCartToken       String
  abandoned_checkout_url String
  presentment_currency   String
  total_price            String
  total_tax              String
  total_discounts        String
  subtotal_price         String
  customerEmail          String?
  customerFirstName      String?
  customerLastName       String?
  orderFulFilled         Boolean      @default(false)
  createdAt              DateTime     @default(now())
  updatedAt              DateTime     @updatedAt
  shopifyStoreId         String
  ShopifyStore           ShopifyStore @relation(fields: [shopifyStoreId], references: [id])

  @@map("checkouts")
}
