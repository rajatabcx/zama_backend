// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  name          String?
  email         String         @unique
  password      String?
  passwordToken String?
  shopifyStore  ShopifyStore?
  emailSetting  EmailSettings?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([name])
  @@index([email])
  @@map("users")
}

model EmailSettings {
  id                 String   @id @unique @default(uuid())
  elasticEmailApiKey String
  userId             String   @unique
  user               User     @relation(fields: [userId], references: [id])
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("email_settings")
}

model ShopifyStore {
  id                    String     @id @unique @default(uuid())
  name                  String     @unique
  accessToken           String     @unique
  storeFrontAccessToken String?    @unique
  scope                 String
  givingDiscount        Boolean    @default(false) // remove this later
  selectedProductIds    Json[]
  discountId            BigInt?
  priceRuleId           BigInt?
  discountCode          String     @default("ZAMA_SPECIAL")
  webhookRegistered     Boolean    @default(false)
  hourDelay             Int        @default(10)
  checkouts             Checkout[]
  userId                String     @unique
  user                  User       @relation(fields: [userId], references: [id])
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt

  @@index([name])
  @@map("shopify_stores")
}

model Checkout {
  id                             String       @id @unique @default(uuid())
  shopifyAdminCheckoutToken      String       @unique
  shopifyStorefrontCheckoutId    String       @unique
  shopifyStoreFrontCheckoutToken String       @unique
  shopifyAbandonedCheckoutURL    String       @unique
  email                          String?
  emailSent                      Boolean      @default(false)
  orderFulFilled                 Boolean      @default(false)
  shopifyStoreId                 String
  ShopifyStore                   ShopifyStore @relation(fields: [shopifyStoreId], references: [id])
  createdAt                      DateTime     @default(now())
  updatedAt                      DateTime     @updatedAt

  @@map("checkouts")
}
